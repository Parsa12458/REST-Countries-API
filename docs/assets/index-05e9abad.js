function P(){import.meta.url,import("_").catch(()=>1);async function*t(){}}(function(){const e=document.createElement("link").relList;if(e&&e.supports&&e.supports("modulepreload"))return;for(const o of document.querySelectorAll('link[rel="modulepreload"]'))r(o);new MutationObserver(o=>{for(const a of o)if(a.type==="childList")for(const i of a.addedNodes)i.tagName==="LINK"&&i.rel==="modulepreload"&&r(i)}).observe(document,{childList:!0,subtree:!0});function n(o){const a={};return o.integrity&&(a.integrity=o.integrity),o.referrerPolicy&&(a.referrerPolicy=o.referrerPolicy),o.crossOrigin==="use-credentials"?a.credentials="include":o.crossOrigin==="anonymous"?a.credentials="omit":a.credentials="same-origin",a}function r(o){if(o.ep)return;o.ep=!0;const a=n(o);fetch(o.href,a)}})();const f=document.querySelector(".cards");function u(t){const e=document.querySelector(".spinner");e&&e.remove(),t.forEach(n=>{const r='\n      <div class="card" data-code="'.concat(n.cca2,'">\n          <img src="').concat(n.flags.png,'" alt="').concat(n.flags.alt,'" class="card__flag" />\n          <h3 class="card__title">').concat(n.name.official,'</h3>\n          <div class="card__info-container">\n            <p class="card-info card__population">\n              Population: <span>').concat(n.population.toLocaleString(),'</span>\n            </p>\n            <p class="card-info card__region">Region: <span>').concat(n.region,'</span></p>\n            <p class="card-info card__capital">\n              Capital: <span>').concat(n.capital?n.capital[0]:"-","</span>\n            </p>\n          </div>\n      </div>\n    ");f.insertAdjacentHTML("beforeend",r)})}function g(t=document.querySelector(".cards")){t.innerHTML="",t.insertAdjacentHTML("beforeend",'<div class="spinner"></div>')}async function s(t,e,n=!0){try{return n&&g(),await(await Promise.race([fetch(e?"".concat(t).concat(e):t),new Promise((a,i)=>setTimeout(()=>i(new Error("Request took too long! Please try again.")),5e3))])).json()}catch(r){throw r}}function c(t,e=document.querySelector(".cards")){e.innerHTML='<p class="error">'.concat(t,"</p>")}async function h(t){try{return(await Promise.all(t.map(async function(o){return s("https://restcountries.com/v3.1/alpha/",o,!1)}))).flat().map(o=>({name:o.name.common,code:o.cca3})).map(o=>'<a class="btn" href="?country='.concat(o.code,'">').concat(o.name,"</a> \n      ")).join("")}catch(e){c(e.message)}}const y=document.querySelector(".cards");function p(t){const e=document.querySelector(".spinner");e&&e.remove();const n=t[0];let r;const o=function(){const a='\n      <div class="modal">\n          <span class="btn btn--close">\n            <ion-icon name="arrow-back-outline"></ion-icon>\n            <span>Back</span>\n          </span>\n\n          <div class="modal-container">\n            <img src="'.concat(n.flags.png,'" alt="').concat(n.flags.alt,'" class="modal__flag" />\n\n            <div class="modal__textbox">\n              <h3 class="modal__title">').concat(n.name.official,'</h3>\n\n              <div class="modal__info-container">\n                <div>\n                  <p class="modal-info modal-info--name">\n                    Native Name: <span>').concat(Object.values(n.name.nativeName)[0].official,'</span>\n                  </p>\n                  <p class="modal-info modal-info--population">\n                    Population: <span>').concat(n.population.toLocaleString(),'</span>\n                  </p>\n                  <p class="modal-info modal-info--region">\n                    Region: <span>').concat(n.region,'</span>\n                  </p>\n                  <p class="modal-info modal-info--sub-region">\n                    Sub Region: <span>').concat(n.subregion,'</span>\n                  </p>\n                  <p class="modal-info modal-info--capital">\n                    Capital: <span>').concat(n.capital[0],'</span>\n                  </p>\n                </div>\n                <div>\n                  <p class="modal-info modal-info--domain">\n                    Top Level Domain: <span>').concat(n.tld.join(", "),'</span>\n                  </p>\n                  <p class="modal-info modal-info--currency">\n                    Currencies: <span>').concat(Object.values(n.currencies)[0].name,'</span>\n                  </p>\n                  <p class="modal-info modal-info--language">\n                    Languages: <span>').concat(Object.values(n.languages).join(", "),'</span>\n                  </p>\n                </div>\n              </div>\n\n              <div class="modal__border">\n                <h4>Border Countries:</h4>\n                <div>\n                  ').concat(r,"\n                </div>\n              </div>\n            </div>\n          </div>\n        </div>");y.insertAdjacentHTML("beforeend",a),document.querySelector(".btn--close")&&document.querySelector(".btn--close").addEventListener("click",k)};n.borders?h(n.borders).then(a=>{r=a,o()}):(r="No bordering countries",o())}function v(t){let e;document.body.classList.toggle("dark-theme"),document.body.classList.contains("dark-theme")?(e=!0,document.querySelector(".dark-mode ion-icon").name="moon"):(e=!1,document.querySelector(".dark-mode ion-icon").name="moon-outline"),localStorage.setItem("darkMode",e)}const _=document.querySelector(".form"),l=document.querySelector(".form__search-input"),b=document.querySelector(".form__filter"),$=document.querySelector(".cards"),S=document.querySelector(".dark-mode"),L=document.querySelector(".header__title"),d=async function(){try{const t=await s("https://restcountries.com/v3.1/all");t&&u(t)}catch(t){c(t.message)}},w=async function(t){try{t.preventDefault();const e=await s("https://restcountries.com/v3.1/name/",l.value);if(e.status===404)throw new Error('No countries found matching "'.concat(l.value,'". Please try again!'));u(e),l.value=""}catch(e){c(e.message)}},q=async function(t){try{const e=t.target.options[t.target.selectedIndex].value;if(e==="")return d();const n=await s("https://restcountries.com/v3.1/region/".concat(e));n&u(n)}catch(e){c(e.message)}},k=function(){d(),history.back()},E=async function(t){try{const e=t.target.closest(".card");if(!e)return;const{code:n}=e.dataset,r=await s("https://restcountries.com/v3.1/alpha/",n);p(r),history.pushState(null,"","?country=".concat(n))}catch(e){c(e.message)}},m=async function(){try{const t=new URLSearchParams(window.location.search).get("country");t?p(await s("https://restcountries.com/v3.1/alpha/",t)):d()}catch(t){c(t.message)}},M=function(){localStorage.getItem("darkMode")==="true"?(document.body.classList.add("dark-theme"),document.querySelector(".dark-mode ion-icon").name="moon"):document.querySelector(".dark-mode ion-icon").name="moon-outline",m(),S.addEventListener("click",v),L.addEventListener("click",d),_.addEventListener("submit",w),b.addEventListener("change",q),$.addEventListener("click",E),window.addEventListener("popstate",function(){m()})};M();export{P as __vite_legacy_guard};
